import mathchem as mc
import numpy


# class MoleculesEstimator:
#     def estimate(self, type: str, edge_list: list):
#         m = mc.Mol()
#         m.read_edgelist(edge_list)
#         if type == 'randic':
#             return m.randic_index()
#         elif type == 'wiener':
#             return m.wiener_index()
#
#     def estimate_from_file(self, file_name):
#         with open(file_name) as file:
#             lines = file.readlines()
#             lines = [line.rstrip() for line in lines]
#             return self.estimate(list(map(lambda line: line.split(" "), lines)))



m = mc.Mol()
# 1 m.read_edgelist([(1, 7), (2, 8), (3, 9), (4, 10), (5, 11), (6, 12), (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 1)])
# 2 m.read_edgelist([(1, 2), (2, 3), (2, 4), (2, 5), (5, 6)])
# 3 m.read_edgelist([(1, 4), (2, 4), (3, 4), (4, 8), (8, 5),(7, 8), (8, 6)])
# 5 m.read_edgelist([(1, 2), (2, 3)])
# 6 m.read_edgelist([(1, 7), (2, 8), (3, 9), (4, 10), (5, 11), (6, 12), (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 1), (8, 15), (8, 13), (8, 14)])
# 7 m.read_edgelist([(1, 2), (2, 3), (3, 4)])
# 9 m.read_edgelist([(1, 4), (2, 4), (3, 4), (5, 4), (5, 9), (9, 6), (9, 7), (9, 8)])
# 11 m.read_edgelist([(1, 2), (2, 3), (3, 4)])
# 12 m.read_edgelist([(1, 4), (2, 4), (3, 4), (4, 5), (5, 6), (5, 7), (5, 8), (8, 9), (8, 10), (8, 11), (11, 12)])
# 13 m.read_edgelist([(1, 5), (2, 5), (3, 5), (6, 4), (5, 6), (6, 7), (7, 8), (6, 9), (9, 10), (9, 11), (9, 12)])
# 14 m.read_edgelist([(1, 2), (2, 3), (3, 1), (6, 3), (4, 6), (6, 5), (6, 12), (12, 11), (12, 10), (9, 12), (9, 7), (9, 8), (9, 3)])
# m.read_edgelist([(1, 4), (2, 4), (3, 4), (4, 5), (5, 9), (9, 10), (9, 12), (9, 11), (5, 6), (7, 6), (8, 7),
#                 (7, 13), (13, 14), (14, 15), (15, 16), (15, 17), (17, 18), (18, 19), (19, 20), (19, 21), (19, 22),
#                 (18, 23, (23, 24), (23, 25), (23, 26),
#                  (14, 27), (27, 28), (27, 29), (29, 30), (29, 31), (31, 32), (31, 33), (33, 34), (33, 13)
#                  )])
# 17 m.read_edgelist([(1, 2), (2, 3), (2, 4), (4, 5)])
# 18 m.read_edgelist([(1, 2), (2, 3), (3, 4), (3, 5), (5, 6), (5, 7), (8, 5)])
# 21 m.read_edgelist([(3, 4), (1, 4), (2, 4), (4, 7), (5, 7), (5, 6), (8, 7), (8, 11), (11, 9), (11, 10), (11, 15), (15, 12), (15, 13), (15, 14)])
# 22 m.read_edgelist([(1, 2), (2, 3), (3, 4)])
# 8 m.read_edgelist([(1, 2), (2, 4), (3, 4), (4, 17), (17, 7), (7, 5), (6, 7), (7, 9), (17, 18), (18, 8), (18, 10), (13, 18), (13, 11), (13, 12), (13, 15), (15, 14), (15, 16),
#                 (19, 20), (20, 21), (19, 22), (19, 2), (22, 23), (22, 24), (24, 25), (24, 26), (26, 27), (26, 28), (28, 29), (28, 20), (27, 30), (30, 31), (30, 32), (32, 33), (33, 34),
#                 (34, 35), (35, 36), (35, 37), (37, 38), (37, 40), (40, 41), (41, 42), (41, 43), (40, 44), (44, 45), (44, 46), (46, 47)
#                 ])

# 24 m.read_edgelist([(1, 2), (2, 3), (2, 4), (2, 5), (5, 6), (6, 7), (7, 8), (8, 9), (9, 5), (9, 10), (10, 11), (10, 12), (12, 13),
#                 (13, 14), (13, 15), (13, 16), (12, 17), (17, 18), (17, 19), (19, 8), (19, 20), (20, 21), (20, 22), (20, 23)])

# m.read_edgelist([(1, 2), (2, 3), (3, 4), (4, 5), (1, 6), (1, 7), (1, 8), (2, 10), (2, 11), (11, 12), (3, 13), (3, 14), (4, 15), (4, 16),
#                 (5, 17), (5, 19), (5, 18), (18, 19), (19, 20), (20, 21), (20, 22), (20, 23), (19, 24), (19, 25), (18, 26), (18, 27)])

# m.read_edgelist([(1, 2), (2, 3), (3, 4), (2, 5), (2, 6), (6, 7), (6, 8), (8, 9), (6, 10), (10, 11), (10, 12), (12, 13), (10, 14), (15, 14),
#                 (14, 16), (16, 17), (14, 18), (18, 19), (19, 20), (19, 21), (19, 22), (22, 23), (18, 24)])

# citrus acid
# m.read_edgelist([(1, 2), (2, 3), (3, 4), (3, 5), (5, 6), (5, 7), (5, 8), (8, 9), (9, 10), (9, 11), (11, 12), (8, 13),
#                 (13, 14), (8, 15), (15, 16), (15, 17), (15, 18), (18, 19), (18, 20), (20, 21)])

# m.read_edgelist([(1,2), (2, 3), (2, 4), (4, 5), (4, 6), (6, 7), (6, 8), (6, 9), (9, 10), (10, 11), (10, 12),
#                 (12, 13), (12, 14), (12, 15), (15, 16), (16, 10), (16, 17), (15, 18), (15, 19),
#                 (15, 20), (20, 21), (21, 22), (21, 23), (23, 24), (23, 25), (25, 26), (25, 27), (27, 28),
#                 (28, 29), (28, 30), (30, 31), (30, 20)])

# antracen
# m.read_edgelist([(1, 2), (2, 3), (3, 4), (3, 5), (5, 6), (5, 7), (7, 8), (8, 9),
#                 (9, 10), (9, 2), (8, 11), (11, 12), (11, 13), (13, 14), (14, 15), (15, 16), (15, 7),
#                 (14, 17), (17, 18), (17, 19), (19, 20), (19, 21), (21, 22), (21, 23), (23, 24), (23, 16)])

# pentacen
#m.read_edgelist(
#    [(0, 1), (2, 9), (1, 2), (1, 6), (6, 7), (6, 5), (5, 8), (5, 4), (4, 3), (3, 2), (4, 10), (10, 15), (10, 11),
#     (11, 12), (12, 13), (13, 3), (13, 14), (12, 16), (21, 16), (16, 17), (17, 18), (18, 19), (19, 11), (19, 20),
#     (22, 17), (22, 27), (22, 23), (23, 24), (24, 25), (25, 18), (25, 26), (23, 28), (28, 29), (29, 30), (30, 31),
#     (31, 24), (32, 29), (33, 30), (28, 34)])

#test
#1
#m.read_edgelist([(1,2), (2, 3)])
#2
#m.read_edgelist([(1,2),(2,3),(2,4),(2,5),(5,6),(6,7),(6,8),(6,9),(9,10), (9,11), (9,12), (8,13), (8, 14), (14, 15), (14, 16), (16, 17), (16, 5), (13, 18), (18, 19), (19, 20), (20, 21), (20, 22), (22, 23), (22, 24), (24, 25), (24, 26), (26, 27), (26, 28), (28, 29), (19, 28), (29, 30), (30, 31), (31, 32), (32, 33), (33, 29), (33, 34), (31, 35), (35, 36), (35, 37), (37, 38), (38, 39), (38, 40), (40, 41), (40, 42), (40, 43), (43, 44), (43, 45), (45, 46), (45, 47), (45, 48), (48, 37)])
#3
#m.read_edgelist([(1,2), (1,3), (1,4), (4, 5), (5, 6), (4, 7), (7, 8), (7, 9), (9, 12), (12, 10), (12, 11), (12, 13)])
#4
#m.read_edgelist([(1,2),(2,3),(3,4),(3,5), (5, 6), (6,7),(6,8),(6,9),(9,10),(9,11),(9,12),(12,13),(13, 14),(14,15),(14,16),(16,17),(16,18),(16,19),(19,20),(19,21),(19,22),(22,23),(23, 24),(23,25),(22,26),(22,27),(27,28),(28,23),(28,30), (31,27),(31,32),(31,33),(31,34),(34,35),(34,36),(34,37),(37,38),(37,39),(39,40),(40,41),(40,42),(40,43),(39,44),(44,45),(44,46),(44,47),(47,48),(47,49),(49,2)])
#5
#m.read_edgelist([(1,2),(2,3),(2,4),(2,5),(5,6),(5,7),(5,8),(8,9),(9,10),(8,11),(11,12),(11,13),(13,14),(8,15),(15,16),(15,17),(15,18),(18,19),(18,20),(20,21)])
#6
#m.read_edgelist(
#    [(0, 1), (2, 9), (1, 2), (1, 6), (6, 7), (6, 5), (5, 8), (5, 4), (4, 3), (3, 2), (4, 10), (10, 15), (10, 11),
#     (11, 12), (12, 13), (13, 3), (13, 14), (12, 16), (21, 16), (16, 17), (17, 18), (18, 19), (19, 11), (19, 20),
#     (22, 17), (22, 27), (22, 23), (23, 24), (24, 25), (25, 18), (25, 26), (23, 28), (28, 29), (29, 30), (30, 31),
#     (31, 24), (32, 29), (33, 30), (28, 34)])
#7
#m.read_edgelist(
#    [(1,2),(2,3),(3,4),(3,5),(5,6),(5,7),(5,8),(8,9),(8,10),(8,11),(11,12),(11,13),(13,14),(13,15),(15,16),(11,17),(17,18),(17,19)]
#)
#8
#m.read_edgelist([(1,2),(1,3),(3,4),(4,5),(4,6),(6,7),(6,8),(8,9),(9,10),(9,11),(11,12),(11,13),(13,14),(13,15),(13,16),(8,17),(17,18),(17,19),(19,20),(19,3)])
#9
#m.read_edgelist([(1,2),(2,3),(2,4),(4,5),(4,6),(6,7),(6,8)])
#10
#m.read_edgelist([(1,2),(2,3),(2,4),(4,5),(4,6),(6,7),(6,7),(6,9),(9,10),(10,11),(10,12),(12,13),(13,14),(13,15),(15,16),(14,17), (17,18),(18,19),(18,20),(20,21),(20,22),(22,23),(22,24),(24,25),(24,26),(26,27),(26,17)])
#11
#m.read_edgelist([(1,2),(2,3),(3,4),(3,5),(5,6),(5,7),(7,8),(8,9),(8,10),(10,11),(2,10),(7,12),(12,13),(12,15),(15,14),(15,16),(15,17), (12,18),(18,19),(19,20),(19,21),(21,22),(21,23),(23,24),(23,25),(25,26),(25,27),(27,28),(27,18)])
#12
#m.read_edgelist([(1,2),(2,3),(2,4),(4,5),(5,6),(5,7),(7,8),(8,9),(8,10),(7,11),(11,12),(12,13),(12,14),(12,15),(11,16),(16,17),(17,18),(17,19),(16,20),(20,21),(20,4)])
#13
#
#14
m.read_edgelist([(1,2),(2,3),(2,4),(4,5),(4,6),(4,7),(7,8),(7,9),(7,10)])
print(m.randic_index())
print(m.wiener_index())
